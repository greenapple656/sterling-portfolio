/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mathGenerator;

import java.awt.Dimension;

import javax.swing.*;
import javax.swing.border.*;

import mathGenerator.generators.*;
import mathGenerator.checkers.*;

/**
 *
 * @author Students
 */
@SuppressWarnings("rawtypes")
public class MathGenerator extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	/**
	 * Creates new form MathGenerator
	 */
	public MathGenerator() {
		initComponents();
	}

    //As the below comments state,the entire method was generated by the IDE (NetBeans).
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        operationComBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        numOfProblemsText = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        range11 = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        range12 = new javax.swing.JSpinner();
        range22 = new javax.swing.JSpinner();
        range21 = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        decPlacesText = new javax.swing.JFormattedTextField();
        addCarrying = new javax.swing.JCheckBox();
        subBorrowing = new javax.swing.JCheckBox();
        divPanel = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        remainderComBox = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        ansDecPlacesText = new javax.swing.JFormattedTextField();
        reset = new javax.swing.JButton();
        submit = new javax.swing.JButton();
        problems = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Math Problem Generator");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Options"));

        jLabel1.setText("Operation:");

        operationComBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Addition", "Subtraction", "Multiplication", "Division" }));
        operationComBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                operationComBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Questions:");
        jLabel2.setToolTipText("Number of questions");

        numOfProblemsText.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        numOfProblemsText.setText("20");
        numOfProblemsText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numOfProblemsTextActionPerformed(evt);
            }
        });

        jLabel3.setText("First number range:");
        jLabel3.setToolTipText("Lowest and highest limits for the first number");

        range11.setModel(new javax.swing.SpinnerNumberModel());
        range11.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                range11Changed(evt);
            }
        });

        jLabel4.setText("-");

        range12.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(10), null, null, Integer.valueOf(1)));
        range12.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                range12Changed(evt);
            }
        });

        range22.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(10), null, null, Integer.valueOf(1)));
        range22.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                range22Changed(evt);
            }
        });

        range21.setModel(new javax.swing.SpinnerNumberModel());
        range21.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                range21Changed(evt);
            }
        });

        jLabel5.setText("-");

        jLabel6.setText("Second number range:");
        jLabel6.setToolTipText("Lowest and highest limits for the first number");

        jLabel7.setText("Decimal Places:");

        decPlacesText.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        decPlacesText.setText("0");
        decPlacesText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decPlacesTextActionPerformed(evt);
            }
        });

        addCarrying.setText("No Carrying");
        addCarrying.setToolTipText("When checked, the addition problems generated will not involve carrying.");
        addCarrying.setName(""); // NOI18N
        addCarrying.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCarryingActionPerformed(evt);
            }
        });

        subBorrowing.setText("No Borrowing");
        subBorrowing.setToolTipText("When checked, the addition problems generated will not involve borrowing.");
        subBorrowing.setName(""); // NOI18N
        subBorrowing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subBorrowingActionPerformed(evt);
            }
        });

        jLabel8.setText("Remainder Type:");

        remainderComBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No remainder (divides evenly)", "Integer remainder", "Decimal" }));
        remainderComBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remainderComBoxActionPerformed(evt);
            }
        });

        jLabel9.setText("Decimal Places of Answer:");

        ansDecPlacesText.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        ansDecPlacesText.setText("2");
        ansDecPlacesText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ansDecPlacesTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout divPanelLayout = new javax.swing.GroupLayout(divPanel);
        divPanel.setLayout(divPanelLayout);
        divPanelLayout.setHorizontalGroup(
            divPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(divPanelLayout.createSequentialGroup()
                .addGroup(divPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(divPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(divPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(remainderComBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ansDecPlacesText))
                .addContainerGap())
        );
        divPanelLayout.setVerticalGroup(
            divPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(divPanelLayout.createSequentialGroup()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(remainderComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ansDecPlacesText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 9, Short.MAX_VALUE))
        );

        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        submit.setText("Submit");
        submit.setToolTipText("Click this when you're done with all the problems!");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(divPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(operationComBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(numOfProblemsText)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(decPlacesText))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(range11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(range12, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                                .addComponent(range21, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(range22, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(reset))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(subBorrowing)
                                    .addComponent(addCarrying)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(submit)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(operationComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(numOfProblemsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(range11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(range12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(reset)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(range21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(range22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(decPlacesText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(subBorrowing)
                    .addComponent(addCarrying))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(divPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(submit)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(problems, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(problems))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 366, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void numOfProblemsTextActionPerformed(
			java.awt.event.ActionEvent evt) {
		round = new Round(
				round.getGenerator(),
				Integer.parseInt(((Long) ((JFormattedTextField) evt.getSource())
						.getValue()).toString()));
		resetProblems();
	}

	private void operationComBoxActionPerformed(java.awt.event.ActionEvent evt) {
		int selected = ((JComboBox) evt.getSource()).getSelectedIndex();
		String operator = "";
		switch (selected) {
		case 0:
			operator = "+";
			addCarrying.setVisible(true);
			subBorrowing.setVisible(false);
			divPanel.setVisible(false);
			remainder = false;
			break;
		case 1:
			operator = "-";
			addCarrying.setVisible(false);
			subBorrowing.setVisible(true);
			divPanel.setVisible(false);
			remainder = false;
			break;
		case 2:
			operator = "*";
			addCarrying.setVisible(false);
			subBorrowing.setVisible(false);
			divPanel.setVisible(false);
			remainder = false;
			break;
		default:
			break;
		}
		String param;
		if (round.getGenerator().getClass() == DivisionGenerator.class) {
			param = operator
					+ ((DivisionGenerator) round.getGenerator())
							.getGeneralParam().substring(1);
		} else {
			param = operator + round.getGenerator().getParam().substring(1);
		}
		round = new Round(new Generator(param, new EmptyChecker()),
				round.getNumProblems());
		if (selected == 3) {
			round = new Round(new DivisionGenerator(("/"
					+ round.getGenerator().getParam().substring(1) + ".0n"),
					new ValidDivisionChecker()), round.getNumProblems());
			addCarrying.setVisible(false);
			subBorrowing.setVisible(false);
			divPanel.setVisible(true);
			remainder = false;
			remainderComBox.setSelectedIndex(0);
			ansDecPlacesText.setEnabled(((DivisionGenerator) round
					.getGenerator()).getRemainderType() == 'd');
			pack();
			setSize(getSize().width, getSize().height + 60);
		}
		resetProblems();
	}

	private void range11Changed(javax.swing.event.ChangeEvent evt) {
		changeRanges((int) ((JSpinner) evt.getSource()).getValue(), 0);
	}

	private void range12Changed(javax.swing.event.ChangeEvent evt) {
		changeRanges((int) ((JSpinner) evt.getSource()).getValue(), 1);
	}

	private void range21Changed(javax.swing.event.ChangeEvent evt) {
		changeRanges((int) ((JSpinner) evt.getSource()).getValue(), 2);
	}

	private void range22Changed(javax.swing.event.ChangeEvent evt) {
		changeRanges((int) ((JSpinner) evt.getSource()).getValue(), 3);
	}

	private void decPlacesTextActionPerformed(java.awt.event.ActionEvent evt) {
		round.getGenerator()
				.setDecimalPlaces(
						Integer.parseInt(((Long) ((JFormattedTextField) evt
								.getSource()).getValue()).toString()));
		round = new Round(round.getGenerator(), round.getNumProblems());
		resetProblems();
	}

	private void addCarryingActionPerformed(java.awt.event.ActionEvent evt) {
		if (((JCheckBox) evt.getSource()).isSelected())
			round = new Round(new Generator(round.getGenerator().getParam(),
					new AddCarryChecker()), round.getNumProblems());
		else
			round = new Round(new Generator(round.getGenerator().getParam(),
					new EmptyChecker()), round.getNumProblems());
		resetProblems();
	}

	private void subBorrowingActionPerformed(java.awt.event.ActionEvent evt) {
		if (((JCheckBox) evt.getSource()).isSelected())
			round = new Round(new Generator(round.getGenerator().getParam(),
					new SubCarryChecker()), round.getNumProblems());
		else
			round = new Round(new Generator(round.getGenerator().getParam(),
					new EmptyChecker()), round.getNumProblems());
		resetProblems();
	}

	private void ansDecPlacesTextActionPerformed(java.awt.event.ActionEvent evt) {
		((DivisionGenerator) round.getGenerator())
				.setAnsDecPlaces((int) ((JFormattedTextField) evt.getSource())
						.getValue());
		round = new Round(round.getGenerator(), round.getNumProblems());
		resetProblems();
	}

	private void resetActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_resetActionPerformed
		round.reset();
		resetProblems();
	}// GEN-LAST:event_resetActionPerformed

	private void resetProblems() {
		if (remainder) {
			resetRemainderProblems();
			return;
		}

		problemDisplays = new ProblemDisplay[round.getNumProblems()];

		JPanel panel = new JPanel();
		panel.setMinimumSize(new Dimension(2, 2));
		panel.setMaximumSize(new Dimension(Short.MAX_VALUE, Short.MAX_VALUE));
		for (int i = round.getNumProblems() / 4
				+ (round.getNumProblems() % 4 == 0 ? 0 : 1); i >= 0; i--) {
			panel.setSize(new Dimension(370, panel.getSize().height + 60));
		}
		panel.setLayout(new Layout(0, 4));

		for (int i = 0; i < round.getNumProblems(); i++) {
			ProblemDisplay problem = new ProblemDisplay(round.getProblem(i),
					round.getGenerator().getParam().charAt(0));
			problemDisplays[i] = problem;
			panel.add(problem);
		}
		panel.revalidate();
		problems.setPreferredSize(new Dimension(388, 360));
		problems.setViewportView(panel);
		problems.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
		problems.revalidate();

		// repaint();
	}

	private void resetRemainderProblems() {

		problemDisplays = new RemainderProblemDisplay[round.getNumProblems()];

		JPanel panel = new JPanel();
		panel.setMinimumSize(new Dimension(2, 2));
		panel.setMaximumSize(new Dimension(Short.MAX_VALUE, Short.MAX_VALUE));
		for (int i = round.getNumProblems() / 4
				+ (round.getNumProblems() % 4 == 0 ? 0 : 1); i >= 0; i--) {
			panel.setSize(new Dimension(370, panel.getSize().height + 60));
		}
		panel.setLayout(new Layout(0, 4));

		for (int i = 0; i < round.getNumProblems(); i++) {
			RemainderProblemDisplay problem = new RemainderProblemDisplay(
					round.getProblem(i), round.getGenerator().getParam()
							.charAt(0));
			problemDisplays[i] = problem;
			panel.add(problem);
		}
		panel.revalidate();
		problems.setPreferredSize(new Dimension(388, 360));
		problems.setViewportView(panel);
		problems.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
		problems.revalidate();
	}

	private void remainderComBoxActionPerformed(java.awt.event.ActionEvent evt) {
		int selected = ((JComboBox) evt.getSource()).getSelectedIndex();
		String remType = "";
		String param = round.getGenerator().getParam();
		if (round.getGenerator().getClass() != DivisionGenerator.class) {
			param = '/' + param.substring(1) + ".0n";
		}
		switch (selected) {
		case 0:
			remType = "n";
			ansDecPlacesText.setEnabled(false);
			remainder = false;
			break;
		case 1:
			remType = "i";
			ansDecPlacesText.setEnabled(false);
			remainder = true;
			break;
		case 2:
			remType = "d";
			ansDecPlacesText.setEnabled(true);
			remainder = false;
			break;
		}
		round = new Round(new DivisionGenerator(param.substring(0,
				param.length())
				+ remType, new ValidDivisionChecker()), round.getNumProblems());
		resetProblems();
	}

	private void submitActionPerformed(java.awt.event.ActionEvent evt) {
		int numIncorrect = 0;
		for (int i = 0; i < problemDisplays.length; i++) {
			boolean correct = round.getProblem(i).checkAnswer();
			if (correct) {
				problemDisplays[i].disableAnswer();
				problemDisplays[i].setBorder(null);
			} else {
				problemDisplays[i].clearAnswer();
				round.getProblem(i).answer("");
				problemDisplays[i]
						.setBorder(new LineBorder(java.awt.Color.RED));
				numIncorrect++;
			}
		}
		if (numIncorrect == 0) {
			JOptionPane.showMessageDialog(null, "All the answers are correct!");
			round.reset();
			resetProblems();
		} else {
			JOptionPane.showMessageDialog(null,
					(numIncorrect + " answers were incorrect."));
		}
	}

	private void changeRanges(int change, int index) {
		int[] ranges = round.getGenerator().ranges();
		ranges[index] = change;
		round.getGenerator().setRanges(ranges);
		round = new Round(round.getGenerator(), round.getNumProblems());
		resetProblems();
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed"
		// desc=" Look and feel setting code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase
		 * /tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (UIManager.LookAndFeelInfo info : UIManager
					.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(MathGenerator.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(MathGenerator.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(MathGenerator.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(MathGenerator.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form, setting a new Round */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				MathGenerator mg = new MathGenerator();
				mg.setVisible(true);
				mg.operationComBox.setSelectedIndex(0);
				mg.resetProblems();
			}
		});

	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox addCarrying;
    private javax.swing.JFormattedTextField ansDecPlacesText;
    private javax.swing.JFormattedTextField decPlacesText;
    private javax.swing.JPanel divPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JFormattedTextField numOfProblemsText;
    private javax.swing.JComboBox operationComBox;
    private javax.swing.JScrollPane problems;
    private javax.swing.JSpinner range11;
    private javax.swing.JSpinner range12;
    private javax.swing.JSpinner range21;
    private javax.swing.JSpinner range22;
    private javax.swing.JComboBox remainderComBox;
    private javax.swing.JButton reset;
    private javax.swing.JCheckBox subBorrowing;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables
	private Round round = new Round(new Generator("+#0:10##0:10.0",
			new EmptyChecker()), 20);
	private ProblemDisplay[] problemDisplays;
	private boolean remainder = false;

	//A modification of GridLayout that allows the problems scroll pane to scroll
	class Layout extends java.awt.GridLayout {
		private static final long serialVersionUID = 1L;

		private Layout(int a, int b) {
			super(a, b);
		}

		public Dimension minimumLayoutSize(java.awt.Container parent) {
			return parent.getMinimumSize();
		}

		public Dimension preferredLayoutSize(java.awt.Container parent) {
			return parent.getSize();
		}
	}
}
